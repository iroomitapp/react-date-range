"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
const Styles = {
  dateRangeWrapper: 'rdrDateRangeWrapper',
  calendarWrapper: 'rdrCalendarWrapper',
  dateDisplay: 'rdrDateDisplay',
  dateDisplayItem: 'rdrDateDisplayItem',
  dateDisplayItemActive: 'rdrDateDisplayItemActive',
  monthAndYearWrapper: 'rdrMonthAndYearWrapper',
  monthAndYearPickers: 'rdrMonthAndYearPickers',
  nextPrevButton: 'rdrNextPrevButton',
  month: 'rdrMonth',
  weekDays: 'rdrWeekDays',
  weekDay: 'rdrWeekDay',
  days: 'rdrDays',
  day: 'rdrDay',
  dayNumber: 'rdrDayNumber',
  dayPassive: 'rdrDayPassive',
  dayToday: 'rdrDayToday',
  dayStartOfWeek: 'rdrDayStartOfWeek',
  dayEndOfWeek: 'rdrDayEndOfWeek',
  daySelected: 'rdrDaySelected',
  dayDisabled: 'rdrDayDisabled',
  dayStartOfMonth: 'rdrDayStartOfMonth',
  dayEndOfMonth: 'rdrDayEndOfMonth',
  dayWeekend: 'rdrDayWeekend',
  dayStartPreview: 'rdrDayStartPreview',
  dayInPreview: 'rdrDayInPreview',
  dayEndPreview: 'rdrDayEndPreview',
  dayHovered: 'rdrDayHovered',
  dayActive: 'rdrDayActive',
  inRange: 'rdrInRange',
  endEdge: 'rdrEndEdge',
  startEdge: 'rdrStartEdge',
  prevButton: 'rdrPprevButton',
  nextButton: 'rdrNextButton',
  selected: 'rdrSelected',
  months: 'rdrMonths',
  monthPicker: 'rdrMonthPicker',
  yearPicker: 'rdrYearPicker',
  dateDisplayWrapper: 'rdrDateDisplayWrapper',
  definedRangesWrapper: 'rdrDefinedRangesWrapper',
  staticRanges: 'rdrStaticRanges',
  staticRange: 'rdrStaticRange',
  inputRanges: 'rdrInputRanges',
  inputRange: 'rdrInputRange',
  inputRangeInput: 'rdrInputRangeInput',
  dateRangePickerWrapper: 'rdrDateRangePickerWrapper',
  staticRangeLabel: 'rdrStaticRangeLabel',
  staticRangeSelected: 'rdrStaticRangeSelected',
  monthName: 'rdrMonthName',
  infiniteMonths: 'rdrInfiniteMonths',
  monthsVertical: 'rdrMonthsVertical',
  monthsHorizontal: 'rdrMonthsHorizontal'
};
var _default = exports.default = Styles;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdHlsZXMiLCJkYXRlUmFuZ2VXcmFwcGVyIiwiY2FsZW5kYXJXcmFwcGVyIiwiZGF0ZURpc3BsYXkiLCJkYXRlRGlzcGxheUl0ZW0iLCJkYXRlRGlzcGxheUl0ZW1BY3RpdmUiLCJtb250aEFuZFllYXJXcmFwcGVyIiwibW9udGhBbmRZZWFyUGlja2VycyIsIm5leHRQcmV2QnV0dG9uIiwibW9udGgiLCJ3ZWVrRGF5cyIsIndlZWtEYXkiLCJkYXlzIiwiZGF5IiwiZGF5TnVtYmVyIiwiZGF5UGFzc2l2ZSIsImRheVRvZGF5IiwiZGF5U3RhcnRPZldlZWsiLCJkYXlFbmRPZldlZWsiLCJkYXlTZWxlY3RlZCIsImRheURpc2FibGVkIiwiZGF5U3RhcnRPZk1vbnRoIiwiZGF5RW5kT2ZNb250aCIsImRheVdlZWtlbmQiLCJkYXlTdGFydFByZXZpZXciLCJkYXlJblByZXZpZXciLCJkYXlFbmRQcmV2aWV3IiwiZGF5SG92ZXJlZCIsImRheUFjdGl2ZSIsImluUmFuZ2UiLCJlbmRFZGdlIiwic3RhcnRFZGdlIiwicHJldkJ1dHRvbiIsIm5leHRCdXR0b24iLCJzZWxlY3RlZCIsIm1vbnRocyIsIm1vbnRoUGlja2VyIiwieWVhclBpY2tlciIsImRhdGVEaXNwbGF5V3JhcHBlciIsImRlZmluZWRSYW5nZXNXcmFwcGVyIiwic3RhdGljUmFuZ2VzIiwic3RhdGljUmFuZ2UiLCJpbnB1dFJhbmdlcyIsImlucHV0UmFuZ2UiLCJpbnB1dFJhbmdlSW5wdXQiLCJkYXRlUmFuZ2VQaWNrZXJXcmFwcGVyIiwic3RhdGljUmFuZ2VMYWJlbCIsInN0YXRpY1JhbmdlU2VsZWN0ZWQiLCJtb250aE5hbWUiLCJpbmZpbml0ZU1vbnRocyIsIm1vbnRoc1ZlcnRpY2FsIiwibW9udGhzSG9yaXpvbnRhbCIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyIuLi9zcmMvc3R5bGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIFN0eWxlc1R5cGUgPSB7XG4gIG1vbnRoQW5kWWVhckRpdmlkZXI6IHN0cmluZztcbiAgZGF0ZVJhbmdlV3JhcHBlcjogc3RyaW5nO1xuICBjYWxlbmRhcldyYXBwZXI6IHN0cmluZztcbiAgZGF0ZURpc3BsYXk6IHN0cmluZztcbiAgZGF0ZURpc3BsYXlJdGVtOiBzdHJpbmc7XG4gIGRhdGVEaXNwbGF5SXRlbUFjdGl2ZTogc3RyaW5nO1xuICBtb250aEFuZFllYXJXcmFwcGVyOiBzdHJpbmc7XG4gIG1vbnRoQW5kWWVhclBpY2tlcnM6IHN0cmluZztcbiAgbmV4dFByZXZCdXR0b246IHN0cmluZztcbiAgbW9udGg6IHN0cmluZztcbiAgd2Vla0RheXM6IHN0cmluZztcbiAgd2Vla0RheTogc3RyaW5nO1xuICBkYXlzOiBzdHJpbmc7XG4gIGRheTogc3RyaW5nO1xuICBkYXlOdW1iZXI6IHN0cmluZztcbiAgZGF5UGFzc2l2ZTogc3RyaW5nO1xuICBkYXlUb2RheTogc3RyaW5nO1xuICBkYXlTdGFydE9mV2Vlazogc3RyaW5nO1xuICBkYXlFbmRPZldlZWs6IHN0cmluZztcbiAgZGF5U2VsZWN0ZWQ6IHN0cmluZztcbiAgZGF5RGlzYWJsZWQ6IHN0cmluZztcbiAgZGF5U3RhcnRPZk1vbnRoOiBzdHJpbmc7XG4gIGRheUVuZE9mTW9udGg6IHN0cmluZztcbiAgZGF5V2Vla2VuZDogc3RyaW5nO1xuICBkYXlTdGFydFByZXZpZXc6IHN0cmluZztcbiAgZGF5SW5QcmV2aWV3OiBzdHJpbmc7XG4gIGRheUVuZFByZXZpZXc6IHN0cmluZztcbiAgZGF5SG92ZXJlZDogc3RyaW5nO1xuICBkYXlBY3RpdmU6IHN0cmluZztcbiAgaW5SYW5nZTogc3RyaW5nO1xuICBlbmRFZGdlOiBzdHJpbmc7XG4gIHN0YXJ0RWRnZTogc3RyaW5nO1xuICBwcmV2QnV0dG9uOiBzdHJpbmc7XG4gIG5leHRCdXR0b246IHN0cmluZztcbiAgc2VsZWN0ZWQ6IHN0cmluZztcbiAgbW9udGhzOiBzdHJpbmc7XG4gIG1vbnRoUGlja2VyOiBzdHJpbmc7XG4gIHllYXJQaWNrZXI6IHN0cmluZztcbiAgZGF0ZURpc3BsYXlXcmFwcGVyOiBzdHJpbmc7XG4gIGRlZmluZWRSYW5nZXNXcmFwcGVyOiBzdHJpbmc7XG4gIHN0YXRpY1Jhbmdlczogc3RyaW5nO1xuICBzdGF0aWNSYW5nZTogc3RyaW5nO1xuICBpbnB1dFJhbmdlczogc3RyaW5nO1xuICBpbnB1dFJhbmdlOiBzdHJpbmc7XG4gIGlucHV0UmFuZ2VJbnB1dDogc3RyaW5nO1xuICBkYXRlUmFuZ2VQaWNrZXJXcmFwcGVyOiBzdHJpbmc7XG4gIHN0YXRpY1JhbmdlTGFiZWw6IHN0cmluZztcbiAgc3RhdGljUmFuZ2VTZWxlY3RlZDogc3RyaW5nO1xuICBtb250aE5hbWU6IHN0cmluZztcbiAgaW5maW5pdGVNb250aHM6IHN0cmluZztcbiAgbW9udGhzVmVydGljYWw6IHN0cmluZztcbiAgbW9udGhzSG9yaXpvbnRhbDogc3RyaW5nO1xufTtcblxuY29uc3QgU3R5bGVzID0ge1xuICBkYXRlUmFuZ2VXcmFwcGVyOiAncmRyRGF0ZVJhbmdlV3JhcHBlcicsXG4gIGNhbGVuZGFyV3JhcHBlcjogJ3JkckNhbGVuZGFyV3JhcHBlcicsXG4gIGRhdGVEaXNwbGF5OiAncmRyRGF0ZURpc3BsYXknLFxuICBkYXRlRGlzcGxheUl0ZW06ICdyZHJEYXRlRGlzcGxheUl0ZW0nLFxuICBkYXRlRGlzcGxheUl0ZW1BY3RpdmU6ICdyZHJEYXRlRGlzcGxheUl0ZW1BY3RpdmUnLFxuICBtb250aEFuZFllYXJXcmFwcGVyOiAncmRyTW9udGhBbmRZZWFyV3JhcHBlcicsXG4gIG1vbnRoQW5kWWVhclBpY2tlcnM6ICdyZHJNb250aEFuZFllYXJQaWNrZXJzJyxcbiAgbmV4dFByZXZCdXR0b246ICdyZHJOZXh0UHJldkJ1dHRvbicsXG4gIG1vbnRoOiAncmRyTW9udGgnLFxuICB3ZWVrRGF5czogJ3JkcldlZWtEYXlzJyxcbiAgd2Vla0RheTogJ3JkcldlZWtEYXknLFxuICBkYXlzOiAncmRyRGF5cycsXG4gIGRheTogJ3JkckRheScsXG4gIGRheU51bWJlcjogJ3JkckRheU51bWJlcicsXG4gIGRheVBhc3NpdmU6ICdyZHJEYXlQYXNzaXZlJyxcbiAgZGF5VG9kYXk6ICdyZHJEYXlUb2RheScsXG4gIGRheVN0YXJ0T2ZXZWVrOiAncmRyRGF5U3RhcnRPZldlZWsnLFxuICBkYXlFbmRPZldlZWs6ICdyZHJEYXlFbmRPZldlZWsnLFxuICBkYXlTZWxlY3RlZDogJ3JkckRheVNlbGVjdGVkJyxcbiAgZGF5RGlzYWJsZWQ6ICdyZHJEYXlEaXNhYmxlZCcsXG4gIGRheVN0YXJ0T2ZNb250aDogJ3JkckRheVN0YXJ0T2ZNb250aCcsXG4gIGRheUVuZE9mTW9udGg6ICdyZHJEYXlFbmRPZk1vbnRoJyxcbiAgZGF5V2Vla2VuZDogJ3JkckRheVdlZWtlbmQnLFxuICBkYXlTdGFydFByZXZpZXc6ICdyZHJEYXlTdGFydFByZXZpZXcnLFxuICBkYXlJblByZXZpZXc6ICdyZHJEYXlJblByZXZpZXcnLFxuICBkYXlFbmRQcmV2aWV3OiAncmRyRGF5RW5kUHJldmlldycsXG4gIGRheUhvdmVyZWQ6ICdyZHJEYXlIb3ZlcmVkJyxcbiAgZGF5QWN0aXZlOiAncmRyRGF5QWN0aXZlJyxcbiAgaW5SYW5nZTogJ3JkckluUmFuZ2UnLFxuICBlbmRFZGdlOiAncmRyRW5kRWRnZScsXG4gIHN0YXJ0RWRnZTogJ3JkclN0YXJ0RWRnZScsXG4gIHByZXZCdXR0b246ICdyZHJQcHJldkJ1dHRvbicsXG4gIG5leHRCdXR0b246ICdyZHJOZXh0QnV0dG9uJyxcbiAgc2VsZWN0ZWQ6ICdyZHJTZWxlY3RlZCcsXG4gIG1vbnRoczogJ3Jkck1vbnRocycsXG4gIG1vbnRoUGlja2VyOiAncmRyTW9udGhQaWNrZXInLFxuICB5ZWFyUGlja2VyOiAncmRyWWVhclBpY2tlcicsXG4gIGRhdGVEaXNwbGF5V3JhcHBlcjogJ3JkckRhdGVEaXNwbGF5V3JhcHBlcicsXG4gIGRlZmluZWRSYW5nZXNXcmFwcGVyOiAncmRyRGVmaW5lZFJhbmdlc1dyYXBwZXInLFxuICBzdGF0aWNSYW5nZXM6ICdyZHJTdGF0aWNSYW5nZXMnLFxuICBzdGF0aWNSYW5nZTogJ3JkclN0YXRpY1JhbmdlJyxcbiAgaW5wdXRSYW5nZXM6ICdyZHJJbnB1dFJhbmdlcycsXG4gIGlucHV0UmFuZ2U6ICdyZHJJbnB1dFJhbmdlJyxcbiAgaW5wdXRSYW5nZUlucHV0OiAncmRySW5wdXRSYW5nZUlucHV0JyxcbiAgZGF0ZVJhbmdlUGlja2VyV3JhcHBlcjogJ3JkckRhdGVSYW5nZVBpY2tlcldyYXBwZXInLFxuICBzdGF0aWNSYW5nZUxhYmVsOiAncmRyU3RhdGljUmFuZ2VMYWJlbCcsXG4gIHN0YXRpY1JhbmdlU2VsZWN0ZWQ6ICdyZHJTdGF0aWNSYW5nZVNlbGVjdGVkJyxcbiAgbW9udGhOYW1lOiAncmRyTW9udGhOYW1lJyxcbiAgaW5maW5pdGVNb250aHM6ICdyZHJJbmZpbml0ZU1vbnRocycsXG4gIG1vbnRoc1ZlcnRpY2FsOiAncmRyTW9udGhzVmVydGljYWwnLFxuICBtb250aHNIb3Jpem9udGFsOiAncmRyTW9udGhzSG9yaXpvbnRhbCcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBTdHlsZXM7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUF1REEsTUFBTUEsTUFBTSxHQUFHO0VBQ2JDLGdCQUFnQixFQUFFLHFCQUFxQjtFQUN2Q0MsZUFBZSxFQUFFLG9CQUFvQjtFQUNyQ0MsV0FBVyxFQUFFLGdCQUFnQjtFQUM3QkMsZUFBZSxFQUFFLG9CQUFvQjtFQUNyQ0MscUJBQXFCLEVBQUUsMEJBQTBCO0VBQ2pEQyxtQkFBbUIsRUFBRSx3QkFBd0I7RUFDN0NDLG1CQUFtQixFQUFFLHdCQUF3QjtFQUM3Q0MsY0FBYyxFQUFFLG1CQUFtQjtFQUNuQ0MsS0FBSyxFQUFFLFVBQVU7RUFDakJDLFFBQVEsRUFBRSxhQUFhO0VBQ3ZCQyxPQUFPLEVBQUUsWUFBWTtFQUNyQkMsSUFBSSxFQUFFLFNBQVM7RUFDZkMsR0FBRyxFQUFFLFFBQVE7RUFDYkMsU0FBUyxFQUFFLGNBQWM7RUFDekJDLFVBQVUsRUFBRSxlQUFlO0VBQzNCQyxRQUFRLEVBQUUsYUFBYTtFQUN2QkMsY0FBYyxFQUFFLG1CQUFtQjtFQUNuQ0MsWUFBWSxFQUFFLGlCQUFpQjtFQUMvQkMsV0FBVyxFQUFFLGdCQUFnQjtFQUM3QkMsV0FBVyxFQUFFLGdCQUFnQjtFQUM3QkMsZUFBZSxFQUFFLG9CQUFvQjtFQUNyQ0MsYUFBYSxFQUFFLGtCQUFrQjtFQUNqQ0MsVUFBVSxFQUFFLGVBQWU7RUFDM0JDLGVBQWUsRUFBRSxvQkFBb0I7RUFDckNDLFlBQVksRUFBRSxpQkFBaUI7RUFDL0JDLGFBQWEsRUFBRSxrQkFBa0I7RUFDakNDLFVBQVUsRUFBRSxlQUFlO0VBQzNCQyxTQUFTLEVBQUUsY0FBYztFQUN6QkMsT0FBTyxFQUFFLFlBQVk7RUFDckJDLE9BQU8sRUFBRSxZQUFZO0VBQ3JCQyxTQUFTLEVBQUUsY0FBYztFQUN6QkMsVUFBVSxFQUFFLGdCQUFnQjtFQUM1QkMsVUFBVSxFQUFFLGVBQWU7RUFDM0JDLFFBQVEsRUFBRSxhQUFhO0VBQ3ZCQyxNQUFNLEVBQUUsV0FBVztFQUNuQkMsV0FBVyxFQUFFLGdCQUFnQjtFQUM3QkMsVUFBVSxFQUFFLGVBQWU7RUFDM0JDLGtCQUFrQixFQUFFLHVCQUF1QjtFQUMzQ0Msb0JBQW9CLEVBQUUseUJBQXlCO0VBQy9DQyxZQUFZLEVBQUUsaUJBQWlCO0VBQy9CQyxXQUFXLEVBQUUsZ0JBQWdCO0VBQzdCQyxXQUFXLEVBQUUsZ0JBQWdCO0VBQzdCQyxVQUFVLEVBQUUsZUFBZTtFQUMzQkMsZUFBZSxFQUFFLG9CQUFvQjtFQUNyQ0Msc0JBQXNCLEVBQUUsMkJBQTJCO0VBQ25EQyxnQkFBZ0IsRUFBRSxxQkFBcUI7RUFDdkNDLG1CQUFtQixFQUFFLHdCQUF3QjtFQUM3Q0MsU0FBUyxFQUFFLGNBQWM7RUFDekJDLGNBQWMsRUFBRSxtQkFBbUI7RUFDbkNDLGNBQWMsRUFBRSxtQkFBbUI7RUFDbkNDLGdCQUFnQixFQUFFO0FBQ3BCLENBQUM7QUFBQyxJQUFBQyxRQUFBLEdBQUFDLE9BQUEsQ0FBQUMsT0FBQSxHQUVhdEQsTUFBTSJ9